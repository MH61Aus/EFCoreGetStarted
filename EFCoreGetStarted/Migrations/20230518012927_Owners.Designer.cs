// <auto-generated />
using EFCoreGetStarted;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCoreGetStarted.Migrations
{
    [DbContext(typeof(BloggingContext))]
    [Migration("20230518012927_Owners")]
    partial class Owners
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFCoreGetStarted.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlogId"));

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("blog_type")
                        .HasColumnType("int");

                    b.HasKey("BlogId");

                    b.ToTable("Blog");

                    b.HasDiscriminator<int>("blog_type");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("EFCoreGetStarted.Owner", b =>
                {
                    b.Property<int>("OwnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OwnerId"));

                    b.Property<int>("YearsSubscribed")
                        .HasColumnType("int");

                    b.HasKey("OwnerId");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("EFCoreGetStarted.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostId"));

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PostId");

                    b.HasIndex("BlogId");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("EFCoreGetStarted.RssBlog", b =>
                {
                    b.HasBaseType("EFCoreGetStarted.Blog");

                    b.Property<string>("RssUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("OwnerId");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("EFCoreGetStarted.SpecialBlog", b =>
                {
                    b.HasBaseType("EFCoreGetStarted.Blog");

                    b.Property<int>("SpecialField")
                        .HasColumnType("int");

                    b.HasIndex("OwnerId")
                        .IsUnique()
                        .HasDatabaseName("IX_Blog_OwnerId1");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("EFCoreGetStarted.Post", b =>
                {
                    b.HasOne("EFCoreGetStarted.Blog", "Blog")
                        .WithMany("Posts")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blog");
                });

            modelBuilder.Entity("EFCoreGetStarted.RssBlog", b =>
                {
                    b.HasOne("EFCoreGetStarted.Owner", "Owner")
                        .WithMany("RssBlogs")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("EFCoreGetStarted.SpecialBlog", b =>
                {
                    b.HasOne("EFCoreGetStarted.Owner", "Owner")
                        .WithOne("SpecialBlog")
                        .HasForeignKey("EFCoreGetStarted.SpecialBlog", "OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Blog_Owners_OwnerId1");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("EFCoreGetStarted.Blog", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("EFCoreGetStarted.Owner", b =>
                {
                    b.Navigation("RssBlogs");

                    b.Navigation("SpecialBlog")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
